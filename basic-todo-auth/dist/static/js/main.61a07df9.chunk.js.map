{"version":3,"sources":["components/Button/Button.js","redux/constants.js","redux/actions/index.js","components/TodoList/TodoList.js","components/Todo/Todo.js","redux/actions/authActions.js","components/Auth/SignIn.js","components/Auth/SignUp.js","components/Layout/Navbar.js","App.js","serviceWorker.js","redux/reducers/todo.js","redux/reducers/authReducer.js","redux/reducers/index.js","config/firebase.js","index.js"],"names":["Button","props","react_default","a","createElement","className","btnType","onClick","children","constants","ADD_TODO","REMOVE_TODO","ADD_TODO_ERROR","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","REGISTER","REGISTER_ERROR","REGISTER_SUCCESS","actions","addTask","task","dispatch","getState","_ref","getFirebase","getFirestore","authorId","firebase","auth","uid","collection","add","title","createdAt","Date","then","type","c","payload","catch","err","deleteTask","id","TodoList","_this","this","li","todos","map","item","index","key","style","color","paddingLeft","moment","toDate","toString","fromNow","components_Button_Button","Component","compose","firestoreConnect","connect","state","firestore","ordered","bindActionCreators","Todo","todo","onInputChange","event","setState","target","value","addTodoHandle","_this2","_this$props","authProfile","fontWeight","fontStyle","firstName","lastName","name","onChange","placeholder","components_TodoList_TodoList","Redirect","to","profile","authActions","signIn","credentials","signInWithEmailAndPassword","email","password","data","console","log","signOut","_ref2","register","userInfo","_ref3","createUserWithEmailAndPassword","resp","doc","user","set","initials","SignIn","handleChange","e","Object","defineProperty","handleSubmit","preventDefault","error","authError","SignUp","links","Fragment","cursor","NavLink","backgroundColor","borderRadius","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","BrowserRouter","Layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","todoReducer","arguments","length","undefined","action","concat","slice","splice","authReducer","objectSpread","message","reducers","combineReducers","tasks","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61a07df9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = (props) => (\n  <button\n    className={\"btn btn-\" + props.btnType}\n    onClick={props.onClick}\n  >{props.children}</button>\n)\n\nexport default Button;","const constants = {\n  ADD_TODO: 'ADD_TOD',\n  REMOVE_TODO: 'REMOVE_TODO',\n  ADD_TODO_ERROR: 'ADD_TODO_ERROR',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT_SUCCESS:'LOGOUT_SUCCESS',\n  REGISTER:'REGISTER',\n  REGISTER_ERROR:'REGISTER_ERROR',\n  REGISTER_SUCCESS:'REGISTER_SUCCESS'\n}\n\nexport default constants;","// import axios from 'axios'\nimport c from '../constants'\n\nconst addTask = (task) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to external api\n    // console.log(getState())\n    const authorId = getState().firebase.auth.uid;\n\n    const firestore = getFirestore()\n    firestore.collection('todos').add({\n      title: task,\n      createdAt: new Date(),\n      authorId: authorId\n    }).then(() => {\n      dispatch({ type: c.ADD_TODO, payload: task })\n    }).catch(err => {\n      dispatch({ type: c.ADD_TODO_ERROR, err })\n    })\n  }\n},\n  deleteTask = (id) => {\n    return {\n      type: c.REMOVE_TODO,\n      payload: id\n    }\n  }\n\nexport default { addTask, deleteTask }","import React, { Component } from 'react'\nimport Button from '../Button/Button'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport deleteTask from '../../redux/actions/'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment'\n\nclass TodoList extends Component {\n  render() {\n\n    let li = (<li className=\"list-group-item text-center\">loading...</li>)\n\n    if (this.props.todos) {\n      li = this.props.todos.map((item, index) => (\n\n        <li className=\"list-group-item\" key={item.id}>\n          <div className='row'>\n            <div className=\"col-md-9\">\n              {item.title}<br />\n              <span style={{ color: 'gray' }}>Created by {item.authorId}</span>, \n              <span style={{paddingLeft:15,color: 'lightgray'}}>{moment(item.createdAt.toDate().toString()).fromNow()}</span>\n            </div>\n            <div className=\"col-md-3\">\n              <Button onClick={() => this.props.deleteTask(item.id)} btnType=\"danger\">x</Button>\n            </div>\n          </div>\n        </li>\n      ))\n    }\n\n    return (\n      <ul className=\"list-group list-group-flush\">\n        {li}\n      </ul>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todos: state.firestore.ordered.todos\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(deleteTask, dispatch)\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(TodoList);\nexport default compose(\n  firestoreConnect(['todos']),\n  connect(mapStateToProps, mapDispatchToProps)\n)(TodoList)","import React, { Component } from 'react'\nimport TodoList from '../TodoList/TodoList'\nimport Button from '../Button/Button'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport addTask from '../../redux/actions'\nimport { Redirect } from 'react-router-dom'\n\nclass Todo extends Component {\n\n  state = {\n    todo: ''\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      todo: event.target.value\n    })\n  }\n\n  addTodoHandle = () => {\n    this.props.addTask(this.state.todo)\n    // console.log(this.state.todo)\n  }\n\n  render() {\n\n    const { auth, authProfile } = this.props;\n    if (!auth.uid) return <Redirect to=\"/login\" />\n\n    return (\n      <div className=\"container mt-5\">\n      <p>Welcome <span style={{fontWeight:100,fontStyle:'italic'}}>{authProfile.firstName} {authProfile.lastName}</span></p>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-center\">Todo App</h2><hr />\n            <div className=\"row\">\n              <div className=\"col-sm-9\">\n                <div className=\"form-group\">\n                  <input type=\"text\" name=\"todo\" onChange={this.onInputChange} className=\"form-control\" placeholder=\"Todo...\" />\n                </div>\n              </div>\n              <div className=\"col-sm-3\">\n                <Button\n                  btnType=\"info\"\n                  onClick={() => this.props.addTask(this.state.todo)}\n                >Add Todo</Button>\n              </div>\n            </div>\n            <div>\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.firebase.auth,\n    authProfile:state.firebase.profile\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(addTask, dispatch)\n  // return {\n  //   addTask: (todo) => dispatch(addTask(todo))\n  // }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","import c from '../constants'\n\nconst signIn = (credentials) => {\n\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email, credentials.password\n    )\n      .then((data) => {\n        console.log(data)\n        dispatch({ type: c.LOGIN_SUCCESS })\n      })\n      .catch(err => {\n        dispatch({ type: c.LOGIN_ERROR, err })\n      })\n  }\n\n}\n\nconst signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signOut()\n      .then(() => {\n        console.log('Signout successful')\n        dispatch({ type: c.LOGOUT_SUCCESS })\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nconst register = (userInfo) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const firebase = getFirebase()\n\n    firebase.auth().createUserWithEmailAndPassword(\n      userInfo.email,\n      userInfo.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: userInfo.firstName,\n        lastName: userInfo.lastName,\n        initials: userInfo.firstName[0] + userInfo.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: c.REGISTER_SUCCESS })\n    }).catch((err) => {\n      dispatch({ type: c.REGISTER_ERROR, err })\n    })\n  }\n\n}\n\nexport default { signIn, signOut, register }","import React, { Component } from 'react'\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport signIn from '../../redux/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '', password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signIn(this.state)\n  }\n\n  render() {\n\n    const { error, auth } = this.props\n    if (auth.uid) return <Redirect to=\"/\" />\n\n    return (\n      <div className=\"container mt-5\">\n        <h4 className=\"pb-3\">Sign In</h4>\n        <div className=\"form-group\">\n          <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Email\" />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"password\" id=\"password\" onChange={this.handleChange} className=\"form-control\" placeholder=\"***\" />\n        </div>\n        <Button btnType=\"info\" onClick={this.handleSubmit}>Sing In</Button>\n        <div className='text-center'>\n          {error ? <p className=\"text-danger\">{error}</p> : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(signIn, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport Button from '../Button/Button'\nimport register from '../../redux/actions/authActions'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nclass SignUp extends Component {\n  state = {\n    email: '', password: '', firstName: '', lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.register(this.state)\n  }\n\n  render() {\n    const { error, auth } = this.props\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container mt-5\">\n        <h4 className=\"pb-3\">Sign Up</h4>\n        <div className=\"form-group\">\n          <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Email\" />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"password\" id=\"password\" onChange={this.handleChange} className=\"form-control\" placeholder=\"***\" />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" id=\"firstName\" onChange={this.handleChange} className=\"form-control\" placeholder=\"First Name\" />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" id=\"lastName\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Last Name\" />\n        </div>\n        <Button btnType=\"primary\" onClick={this.handleSubmit}>Register</Button>\n        <div>\n          {error ? <p className=\"text-center text-danger\">{error}</p> : null}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    error: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(register, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport signOut from '../../redux/actions/authActions'\nimport './Navbar.css'\n\nconst NavBar = (props) => {\n\n  const { auth, authProfile } = props\n\n  const links = auth.uid ? (\n    <React.Fragment>\n      <li className=\"nav-item\">\n        <span style={{ cursor: \"pointer\" }} onClick={props.signOut} className=\"nav-link\">Sign Out</span>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink to=\"/profile\" style={{backgroundColor:'green',borderRadius:300,color:'white'}} className=\"nav-link\">{authProfile.initials}</NavLink>\n      </li>\n    </React.Fragment>\n\n  ) : (\n      <React.Fragment>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\n        </li>\n      </React.Fragment>\n    )\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <span className=\"navbar-brand\">\n          <NavLink to=\"/\">Navbar</NavLink></span>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav justify-content-end\">\n            {links}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authProfile: state.firebase.profile\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(signOut, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { Component } from 'react';\nimport Todo from './components/Todo/Todo'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport SignIn from './components/Auth/SignIn';\nimport SignUp from './components/Auth/SignUp';\nimport NavBar from './components/Layout/Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Todo} />\n            <Route path=\"/login\" component={SignIn} />\n            <Route path='/register' component={SignUp} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import c from '../constants'\n\nconst initialState = []\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case c.ADD_TODO:\n      state = state.concat(action.payload);\n      return state;\n    case c.ADD_TODO_ERROR:\n      console.log('add todo error: ')\n      return state;\n\n    case c.REMOVE_TODO:\n      console.log('remove todo...')\n      state = state.slice();\n      state.splice(action.payload, 1)\n      return state;\n    default:\n      return state;\n  }\n\n}\n\nexport default todoReducer","import c from '../constants'\nconst initialState = {\n  authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case c.LOGIN_SUCCESS:\n      return {\n        ...state, authError: null\n      }\n\n    case c.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail'\n      }\n\n    case c.LOGOUT_SUCCESS:\n      return state\n\n    case c.REGISTER_SUCCESS:\n      console.log('Signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case c.REGISTER_ERROR:\n      console.log('Signup Error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer","import { combineReducers } from 'redux'\nimport todoReducer from './todo'\nimport authReducer from './authReducer'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst reducers = combineReducers({\n  tasks: todoReducer,\n  auth: authReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n})\n\nexport default reducers","// import * as firebase from \"firebase\";\n\n// import { FirebaseConfig } from \"../config/keys\";\n// firebase.initializeApp(FirebaseConfig);\n\n// const databaseRef = firebase.database().ref();\n// export const todosRef = databaseRef.child(\"todos\");\n// export const authRef = firebase.auth();\n// export const provider = new firebase.auth.GoogleAuthProvider();\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar FirebaseConfig = {\n  apiKey: \"AIzaSyAW53ACc7WayUhwGkGUQf-byAA_39ZS-e8\",\n  authDomain: \"react-todo-41a4d.firebaseapp.com\",\n  databaseURL: \"https://react-todo-41a4d.firebaseio.com\",\n  projectId: \"react-todo-41a4d\",\n  storageBucket: \"react-todo-41a4d.appspot.com\",\n  messagingSenderId: \"774358069044\"\n};\n\nfirebase.initializeApp(FirebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducers from './redux/reducers/index'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebase'\n\nlet store = createStore(reducers,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n    document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}